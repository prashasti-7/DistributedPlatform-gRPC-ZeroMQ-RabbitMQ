syntax = "proto3";

//Seller-Mkt functionalities
message SellerInfo {
  string address = 1;
  string uuid = 2;
}

message BuyerInfo {
  string address = 1;
  string uuid = 2;
}

message ItemID {
  string item_id = 1;
}

message ItemDetails {
  ItemID item_id = 1;
  string name = 2;
  string category = 3;
  int32 quantity = 4;
  string description = 5;
  SellerInfo seller_info = 6;
  double price_per_unit = 7;
  float rating = 8;
}

message UpdateItemRequest {
  ItemID item_id = 1;
  double new_price = 2;
  int32 new_quantity = 3;
  SellerInfo seller_info = 4;
}

message DisplayItems {
  repeated ItemDetails items = 1;
}

message DeleteItemRequest {
  ItemID item_id = 1;
  SellerInfo seller_info = 2;
}

//Buyer-Mkt functionalities
message SearchRequest {
  string item_name = 1;
  string category = 2;
}

message BuyRequest {
  ItemID item_id = 1;
  int32 quantity = 2;
  BuyerInfo buyer_info = 3;
}

message AddToWishListRequest {
  ItemID item_id = 1;
  BuyerInfo buyer_info = 2;
}

message RateItemRequest {
  ItemID item_id = 1;
  BuyerInfo buyer_info = 2;
  float rating = 3;
}

message Notification {
  string message = 1;
}

message NotifyResponse {
  bool acknowledged = 1;
}

// Define the Market service
service Market {
  rpc RegisterSeller(SellerInfo) returns (SuccessResponse); //Seller functions
  rpc SellItem(ItemDetails) returns (SuccessResponse);
  rpc UpdateItem(UpdateItemRequest) returns (SuccessResponse);
  rpc DeleteItem(DeleteItemRequest) returns (SuccessResponse);
  rpc DisplaySellerItems(SellerInfo) returns (DisplayItems);

  rpc SearchItem(SearchRequest) returns (DisplayItems); //Buyer functions
  rpc BuyItem(BuyRequest) returns (SuccessResponse);
  rpc AddToWishList(AddToWishListRequest) returns (SuccessResponse);
  rpc RateItem(RateItemRequest) returns (SuccessResponse);

}

service NotificationService {
  rpc NotifyClient(Notification) returns (NotifyResponse);
}

// Define the response message for success/failure
message SuccessResponse {
  bool success = 1;
}
